/* ------------------------------------------------------------------ */
/*  0.  Plugins block â€“ MUST be first on AGP 8                         */
/* ------------------------------------------------------------------ */
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services' version '4.4.1'
    id 'dev.flutter.flutter-gradle-plugin'
}

repositories {
    google()
    mavenCentral()

    // ---------- Flutter plugin AARs ----------
    // Flutter builds every plugin AAR into this folder, then publishes it
    // as a miniature Maven repo.  Tell Gradle to look here first.
    maven { url "$buildDir/host/outputs/repo" }

    // ---------- Flutter-hosted artifacts (embedding, etc.) ----------
    maven { url "https://storage.googleapis.com/download.flutter.io" }
}

/* ------------------------------------------------------------------ */
/*  1.  Locate the Flutter SDK and apply flutter.gradle               */
/* ------------------------------------------------------------------ */
def lpFile = rootProject.file('local.properties')
def flutterSdkPath = null
if (lpFile.exists()) {
    def p = new java.util.Properties()
    lpFile.withReader('UTF-8') { p.load(it) }
    flutterSdkPath = p.getProperty('flutter.sdk')
}
if (flutterSdkPath == null) {
    throw new GradleException(
            "Flutter SDK not found. Add flutter.sdk=<path> to local.properties")
}

/* ------------------------------------------------------------------ */
/*  2.  Android configuration                                         */
/* ------------------------------------------------------------------ */
android {
    namespace   "com.research.cvs"   // replaces old manifest package=
    compileSdk  35

    defaultConfig {
        applicationId       "com.research.cvs"
        minSdk              23
        targetSdk           35
        versionCode         5
        versionName         "1.0.0"
        multiDexEnabled     true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }

    /* If you sign APKs locally, keep this block; otherwise remove it. */
    signingConfigs {
        release {
            def kPropsFile = rootProject.file('key.properties')
            if (kPropsFile.exists()) {
                def k = new java.util.Properties()
                kPropsFile.withReader('UTF-8') { k.load(it) }
                keyAlias       k['keyAlias']
                keyPassword    k['keyPassword']
                storeFile      k['storeFile'] ? file(k['storeFile']) : null
                storePassword  k['storePassword']
            }
        }
    }
    buildTypes { 
        release { 
            // signingConfig signingConfigs.release 
        } 
    }

    lint {
        disable 'InvalidPackage', 'Instantiatable'
        checkReleaseBuilds false
    }
}

/* ------------------------------------------------------------------ */
/*  3.  Let Flutter know where the Dart sources live                  */
/* ------------------------------------------------------------------ */
flutter { source '../..' }

/* ------------------------------------------------------------------ */
/*  4.  Dependencies                                                  */
/* ------------------------------------------------------------------ */
dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    // Kotlin stdlib is added automatically but keeping it is harmless
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    // Flutter embedding
    debugImplementation "io.flutter:flutter_embedding_debug:1.0.0-3316dd8728419ad3534e3f6112aa6291f587078a"
    profileImplementation "io.flutter:flutter_embedding_profile:1.0.0-3316dd8728419ad3534e3f6112aa6291f587078a"
    releaseImplementation "io.flutter:flutter_embedding_release:1.0.0-3316dd8728419ad3534e3f6112aa6291f587078a"

    implementation 'androidx.multidex:multidex:2.0.1'

    // Firebase BoM keeps all Firebase libs in sync
    implementation platform('com.google.firebase:firebase-bom:33.1.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.5'

    testImplementation       'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
